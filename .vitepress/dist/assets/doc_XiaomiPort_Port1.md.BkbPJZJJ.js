import{_ as o,c as i,o as a,aj as s}from"./chunks/framework.B0lLLFDn.js";const h=JSON.parse('{"title":"MIUI/HyperOS 移植指南：常見問題與修復","description":"","frontmatter":{},"headers":[],"relativePath":"doc/XiaomiPort/Port1.md","filePath":"doc/XiaomiPort/Port1.md","lastUpdated":null}'),l={name:"doc/XiaomiPort/Port1.md"};function d(r,e,t,c,n,p){return a(),i("div",null,e[0]||(e[0]=[s(`<h1 id="miui-hyperos-移植指南-常見問題與修復" tabindex="-1">MIUI/HyperOS 移植指南：常見問題與修復 <a class="header-anchor" href="#miui-hyperos-移植指南-常見問題與修復" aria-label="Permalink to &quot;MIUI/HyperOS 移植指南：常見問題與修復&quot;">​</a></h1><p>這份指南整理了在進行 MIUI 或 HyperOS 韌體移植時，可能遇到的問題及其解決方案。</p><blockquote><p>此修復方案教學由 酷安眾多大佬提供，由 閃電Flashh 彙整，真摯感謝。</p></blockquote><h2 id="📌-移植核心概念" tabindex="-1">📌 移植核心概念 <a class="header-anchor" href="#📌-移植核心概念" aria-label="Permalink to &quot;📌 移植核心概念&quot;">​</a></h2><ul><li><strong>Payload-Type 特性</strong>：在 <code>super</code> 分割區中，每個邏輯分割區（如 <code>system</code>、<code>system_ext</code>、<code>product</code>、<code>mi_ext</code>）都有其特定標籤。移植時，需要將其他機型的這些邏輯分割區替換過來。</li><li><strong>分區合併</strong>: 如果老機型缺少某些分區，可將其內容合併至 <code>system</code> 分割區。</li><li><strong>修復 VBMeta</strong>: 由於更換了分區，必須修補 <code>vbmeta</code> 和 <code>vbmeta_system</code> 來移除 AVB 驗證，否則無法開機。</li></ul><hr><h2 id="📁-檔案系統與內核" tabindex="-1">📁 檔案系統與內核 <a class="header-anchor" href="#📁-檔案系統與內核" aria-label="Permalink to &quot;📁 檔案系統與內核&quot;">​</a></h2><ul><li><strong>EROFS 格式</strong>： <ul><li><strong>小米 5.4 內核及以上</strong>的裝置官方內核已支援 EROFS 格式，可直接打包。</li><li><strong>4.19 內核</strong>通常不支援，需打包為 <strong>EXT4 格式</strong>，或更換支援的內核並補全 <code>fstab</code>。</li></ul></li></ul><hr><h2 id="_1-移植-8-gen-3-或更新機型包卡一屏" tabindex="-1">1. 移植 8 Gen 3 或更新機型包卡一屏 <a class="header-anchor" href="#_1-移植-8-gen-3-或更新機型包卡一屏" aria-label="Permalink to &quot;1\\. 移植 8 Gen 3 或更新機型包卡一屏&quot;">​</a></h2><p>從 8 Gen 2 或更舊機型的 HyperOS 中，提取以下檔案並補入： <code>/system_ext/apex/com.android.vndk.v3X.apex</code></p><h2 id="_2-老內核-4-x-5-x-低版本-卡二屏" tabindex="-1">2. 老內核（4.x, 5.x 低版本）卡二屏 <a class="header-anchor" href="#_2-老內核-4-x-5-x-低版本-卡二屏" aria-label="Permalink to &quot;2\\. 老內核（4.x, 5.x 低版本）卡二屏&quot;">​</a></h2><ul><li><p><strong>現象</strong>: 畫面卡在第二屏，但可能有聲音、震動或按鍵反應。</p></li><li><p><strong>修復</strong>: 在 <code>/system_ext/etc/init</code> 路徑下新增一個空檔案 <code>init.gsi.rc</code>。</p><blockquote><p><em>此修復方案來自 Nazrin 和 皮神 i。</em></p></blockquote></li></ul><h2 id="_3-修復-poco-機型開機桌面崩潰" tabindex="-1">3. 修復 POCO 機型開機桌面崩潰 <a class="header-anchor" href="#_3-修復-poco-機型開機桌面崩潰" aria-label="Permalink to &quot;3\\. 修復 POCO 機型開機桌面崩潰&quot;">​</a></h2><p>在任意分區的 <code>etc/build.prop</code> 中新增以下程式碼：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ro.miui.product.home=com.miui.home</span></span>
<span class="line"><span>ro.product.vendor.brand=Redmi</span></span>
<span class="line"><span>ro.product.odm.brand=Redmi</span></span>
<span class="line"><span>ro.product.vendor_dlkm.brand=Redmi</span></span></code></pre></div><h2 id="_4-修復圓角與狀態列" tabindex="-1">4. 修復圓角與狀態列 <a class="header-anchor" href="#_4-修復圓角與狀態列" aria-label="Permalink to &quot;4\\. 修復圓角與狀態列&quot;">​</a></h2><p>用原機型的檔案替換以下路徑的檔案：<br><code>/product/overlay/DevicesOverlay.apk</code><br><code>/product/overlay/DevicesAndroidOverlay.apk</code></p><blockquote><p><strong>注意</strong>: MIUI 12.5 A11 版本可能在 <code>vendor</code> 分區。最低只能使用 MIUI A13 的檔案，A12 或更老的版本需依新版格式修改，否則可能導致圓角錯位或充電動畫異常。</p></blockquote><h2 id="_5-修復螢幕更新率" tabindex="-1">5. 修復螢幕更新率 <a class="header-anchor" href="#_5-修復螢幕更新率" aria-label="Permalink to &quot;5\\. 修復螢幕更新率&quot;">​</a></h2><p>用原機型的檔案替換以下路徑的檔案： <code>/product/etc/device_features/</code></p><blockquote><p><strong>注意</strong>: 老版本 MIUI 可能在 <code>/vendor/etc/device_features/</code> 或 <code>/system/etc/device_features/</code>。</p></blockquote><h2 id="_6-修復核心分配" tabindex="-1">6. 修復核心分配 <a class="header-anchor" href="#_6-修復核心分配" aria-label="Permalink to &quot;6\\. 修復核心分配&quot;">​</a></h2><p>最簡單的方式是直接移植<strong>同處理器架構</strong>的機型。 或者，打開 <code>/product/etc/build.prop</code>，根據你機型官方的參數來修改以下屬性：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>persist.sys.miui_animator_sched.bigcores=</span></span>
<span class="line"><span>persist.sys.miui_animator_sched.big_prime_cores=</span></span>
<span class="line"><span>persist.vendor.display.miui.composer_boost=</span></span>
<span class="line"><span>persist.sys.miui.sf_cores=</span></span>
<span class="line"><span>ro.miui.affinity.sfui=</span></span>
<span class="line"><span>ro.miui.affinity.sfre=</span></span>
<span class="line"><span>ro.miui.affinity.sfuirese=</span></span></code></pre></div><blockquote><p><strong>原則</strong>: 多的刪、少的補、不一樣的改。</p></blockquote><h2 id="_7-修復人臉識別" tabindex="-1">7. 修復人臉識別 <a class="header-anchor" href="#_7-修復人臉識別" aria-label="Permalink to &quot;7\\. 修復人臉識別&quot;">​</a></h2><p>用底包的檔案替換以下路徑的檔案： <code>/product/app/Biometric/</code><br><code>/product/overlay/MiuiBiometricResOverlay.apk</code> (如果存在)</p><blockquote><p><strong>注意</strong>:</p><ul><li>最低支援 MIUI A13。</li><li>如果底包過舊，可嘗試使用 8+ Gen 1 機型的檔案，可能可用，但初次錄入可能會有延遲。</li></ul></blockquote><h2 id="_8-修復微信-支付寶指紋支付" tabindex="-1">8. 修復微信/支付寶指紋支付 <a class="header-anchor" href="#_8-修復微信-支付寶指紋支付" aria-label="Permalink to &quot;8\\. 修復微信/支付寶指紋支付&quot;">​</a></h2><ul><li><strong>適用範圍</strong>: MIUI 14 安卓 12 或更老的底包。</li><li><strong>修復</strong>: 從同代機型 MIUI 14 安卓 13 或更高版本，提取並替換以下路徑的檔案： <code>/vendor/app/SoterService/</code><br><code>/vendor/app/IFAAService/</code></li></ul><blockquote><p><em>此方案來自欣戀。</em></p></blockquote><h2 id="_9-修復指紋樣式錯位" tabindex="-1">9. 修復指紋樣式錯位 <a class="header-anchor" href="#_9-修復指紋樣式錯位" aria-label="Permalink to &quot;9\\. 修復指紋樣式錯位&quot;">​</a></h2><ul><li><strong>舊樣式</strong>: 如果是老指紋樣式，直接刪除 <code>/product/overlay/SettingsRroDeviceSystemUiOverlay.apk</code> 即可。</li><li><strong>蝴蝶樣式</strong>: 從支援蝴蝶樣式的 HyperOS A14 機型中提取該檔案並補入。</li><li><strong>側邊指紋</strong>: 刪除或保留此檔案皆可，不影響功能。</li></ul><h2 id="_10-修復息屏顯示" tabindex="-1">10. 修復息屏顯示 <a class="header-anchor" href="#_10-修復息屏顯示" aria-label="Permalink to &quot;10\\. 修復息屏顯示&quot;">​</a></h2><ul><li><p><strong>常規修復</strong>:</p><ol><li>拆包 <code>/product/overlay/DevicesAndroidOverlay.apk</code>。</li><li>找到 <code>resources.arsc</code>。</li><li>在 <code>com.miui.systemui.overlay.devices.android - string - string - config_dozeComponent</code> 中，將原值： <code>com.miui.aod/com.miui.aod.doze.DozeService</code></li><li>修改為： <code>com.android.systemui/com.android.systemui.doze.DozeService</code></li></ol></li><li><p><strong>5.10 內核設備半殘修復</strong>：</p><ul><li>以 Note 12 Turbo 1.0.2 為例，拆解 <code>vendor_dlkm</code> 和 <code>vendor_boot</code>。</li><li>找到 <code>msm_drm.ko</code> 和 <code>msm_kgsl.ko</code> 這四個檔案。</li><li>用其他可用的 ROM（如 N12T 歐版 OS 1.0.4）中的對應檔案替換。</li></ul></li></ul><h2 id="_11-修復自動亮度與閃屏" tabindex="-1">11. 修復自動亮度與閃屏 <a class="header-anchor" href="#_11-修復自動亮度與閃屏" aria-label="Permalink to &quot;11\\. 修復自動亮度與閃屏&quot;">​</a></h2><ul><li><strong>自動亮度、手動亮度閃屏</strong>： <ul><li>必須<strong>同時替換</strong>以下三個檔案，否則可能卡一屏： <code>/product/overlay/AospFrameworkResOverlay.apk</code><br><code>/product/overlay/MiuiFrameworkResOverlay.apk</code><br><code>/product/etc/displayconfig/</code></li></ul></li><li><strong>老機型自動亮度</strong>： <ol><li>使用終端輸入 <code>su</code>，再輸入 <code>dumpsys display</code>。</li><li>找到 <strong>uniqueld</strong> 後的 ID 值。</li><li>將 <code>/product/etc/displayconfig/display_id_數字.xml</code> 重新命名為 <code>display_id_上一步得到的ID值.xml</code>。</li><li>參考 Mi 10 系列參數修改 XML 內容。</li><li>最高亮度參數可從 <code>AospFrameworkResOverlay</code> 的 <code>config_autoBrightnessDisplayValuesNits</code> 中查找。</li></ol></li></ul><blockquote><p><strong>提示</strong>: 部分機型（如 LCD 螢幕）的 display_id 是 0。</p></blockquote><h2 id="_12-修復相機" tabindex="-1">12. 修復相機 <a class="header-anchor" href="#_12-修復相機" aria-label="Permalink to &quot;12\\. 修復相機&quot;">​</a></h2><ul><li><p><strong>常規修復</strong>:</p><ul><li>用底包的檔案替換 <code>/product/priv-app/MiuiCamera/</code>。</li><li>如果底包過老，可嘗試從 Civi 14.0.6、Mi 12X OS 1.0.2 或 Mi 11 青春活力 OS 1.0.1 中提取。</li></ul></li><li><p><strong>徠卡水印</strong>:</p><ul><li>在底包 <code>/product/overlay/</code> 中找到帶 <code>Leica</code> 關鍵字的 overlay 檔案，複製到移植包。</li></ul></li><li><p><strong>第三方應用前攝泛白</strong>：</p><ul><li><strong>適用範圍</strong>: K40 等機型。</li><li><strong>修復</strong>: 拆包 <code>/product/overlay/MiuiFrameworkResOverlay.apk</code>，在 <code>resources.arsc</code> 的 <code>bool</code> 中新增：</li></ul><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;config_frontcamera_circle_black&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;true&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li></ul><h2 id="_13-修復-dpi" tabindex="-1">13. 修復 DPI <a class="header-anchor" href="#_13-修復-dpi" aria-label="Permalink to &quot;13\\. 修復 DPI&quot;">​</a></h2><p>在各分區的 <code>build.prop</code> 中新增或修改以下兩條屬性：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>persist.miui.density_v2=</span></span>
<span class="line"><span>ro.sf.lcd_density=</span></span></code></pre></div><ul><li><strong>2K 螢幕</strong>: 560</li><li><strong>1.5K 螢幕</strong>: 480</li><li><strong>1080P 螢幕</strong>: 440</li><li><strong>720P 螢幕</strong>: 320</li></ul><h2 id="_14-修復-nfc" tabindex="-1">14. 修復 NFC <a class="header-anchor" href="#_14-修復-nfc" aria-label="Permalink to &quot;14\\. 修復 NFC&quot;">​</a></h2><ul><li><strong>同安卓版本移植</strong>: 替換 <code>/system/app/</code> (或 <code>/product/pangu/system/system/app/</code>) 下帶 <code>nfc</code> 關鍵字的資料夾。</li><li><strong>NFC 無法打開</strong>: <ul><li>從同代可用 NFC 機型，替換 <code>/vendor/bin/</code>、<code>/vendor/lib/</code> 和 <code>/vendor/lib64/</code> 中相關的 <code>nfc</code> 檔案。</li></ul></li><li><strong>NFC 打開但無法使用</strong>: <ul><li>從同代可用 NFC 機型，替換 <code>/vendor/etc/</code> 中所有以 <code>libnfc</code> 開頭的檔案。</li></ul></li></ul><h2 id="_15-修復小米錢包與電子身份證" tabindex="-1">15. 修復小米錢包與電子身份證 <a class="header-anchor" href="#_15-修復小米錢包與電子身份證" aria-label="Permalink to &quot;15\\. 修復小米錢包與電子身份證&quot;">​</a></h2><ul><li><strong>智慧卡</strong>: 在 <code>build.prop</code> 檔案底部（如 <code>/mi_ext/etc/build.prop</code>）新增：<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ro.vendor.se.type=HCE,UICC,eSE</span></span></code></pre></div></li><li><strong>eID 公民網路電子身份證</strong>: 從國行版 ROM 提取 <code>/vendor/app/</code> 下的 <code>EidService</code> 或 <code>EidService_V2</code> 資料夾並補入。</li></ul><blockquote><p><strong>注意</strong>: 並非所有機型都支援 eID。</p></blockquote><p>好的，這是我將你提供的文字轉換為適合網頁閱讀的 Markdown 格式，並進行精簡、美化與優化後的內容。</p><hr><h2 id="_16-修復挖孔螢幕狀態列突出問題" tabindex="-1">16.修復挖孔螢幕狀態列突出問題 <a class="header-anchor" href="#_16-修復挖孔螢幕狀態列突出問題" aria-label="Permalink to &quot;16.修復挖孔螢幕狀態列突出問題&quot;">​</a></h2><p>當螢幕挖孔區塊與狀態列高度不符時，可透過修改系統覆蓋包（Overlay）來調整。</p><ol><li><p><strong>拆包</strong>: <code>/product/overlay/DevicesAndroidOverlay.apk</code></p></li><li><p><strong>修改狀態列高度</strong>:</p><ul><li>在 <code>resources.arsc</code> → <code>dimen</code> 底下，找到所有 DPI 設定中的 <code>status_bar_height_default</code>。</li><li>將其數值修改為合適的大小，直到狀態列不再突出。</li><li>同時，將 <code>status_bar_height_portrait</code> 也修改為與 <code>status_bar_height_default</code> 相同的數值。</li></ul></li></ol><hr><h2 id="_17-修復訊飛輸入法全面屏優化問題" tabindex="-1">17.修復訊飛輸入法全面屏優化問題 <a class="header-anchor" href="#_17-修復訊飛輸入法全面屏優化問題" aria-label="Permalink to &quot;17.修復訊飛輸入法全面屏優化問題&quot;">​</a></h2><p>此修復方案適用於 <strong>MIUI 14 A12 或更舊的底包</strong>，旨在解決訊飛輸入法在全螢幕模式下的顯示異常。</p><ol><li><p><strong>拆包</strong>: <code>/product/overlay/DevicesAndroidOverlay.apk</code></p></li><li><p><strong>補全數值</strong>:</p><ul><li>在 <code>resources.arsc</code> → <code>com.miui.systemui.overlay.devices.android</code> → <code>dimen</code> → <code>dimen</code> 路徑下，新增並設定以下數值： <ul><li><code>notification_min_height</code>: 設置為 <strong>106dp</strong></li><li><code>rounded_corner_radius</code>: 與本機型的 <code>rounded_corner_radius_bottom</code> 保持一致</li><li><code>status_bar_height_default</code>: 與本機型的 <code>status_bar_height_portrait</code> 保持一致</li></ul></li></ul></li><li><p><strong>依據 DPI 補齊</strong>:</p><ul><li>返回 <code>com.miui.systemui.overlay.devices.android</code> → <code>dimen</code>。</li><li>根據本機型螢幕解析度，補上對應的 DPI，例如 <strong>1080p 設備需補上 <code>dimen-440dpi</code></strong>。</li><li>從 <code>dimen-dimen</code> 中匯入以下資源到對應的 DPI 文件： <ul><li><code>rounded_corner_radius</code></li><li><code>rounded_corner_radius_bottom</code></li><li><code>rounded_corner_radius_top</code></li><li><code>status_bar_height_default</code></li><li><code>status_bar_height_portrait</code></li></ul></li><li>確保所有 DPI 文件中的數值與 <code>dimen-dimen</code> 裡的數值一致。</li></ul></li></ol><hr><h2 id="_18-修復應用權限提醒綠點顯示異常" tabindex="-1">18.修復應用權限提醒綠點顯示異常 <a class="header-anchor" href="#_18-修復應用權限提醒綠點顯示異常" aria-label="Permalink to &quot;18.修復應用權限提醒綠點顯示異常&quot;">​</a></h2><p>當螢幕右上角的小綠點（應用權限提醒）顯示過小或位置不對時，可透過以下步驟修復。</p><ol><li><p><strong>調整狀態列高度（DevicesAndroidOverlay.apk）</strong>:</p><ul><li><strong>拆包</strong>: <code>/product/overlay/DevicesAndroidOverlay.apk</code></li><li>在 <code>com.miui.systemui.overlay.devices.android</code> → <code>resources.arsc</code> → <code>dimen</code> 中，修改所有 DPI 的數值。</li><li>將 <code>status_bar_height_default</code> 的數值調大，直到綠點圖示大小正常。</li><li>將 <code>status_bar_height_portrait</code> 的數值也調整為與 <code>status_bar_height_default</code> 相同。</li></ul></li><li><p><strong>調整狀態列填充（DevicesOverlay.apk）</strong>:</p><ul><li><strong>拆包</strong>: <code>/product/overlay/DevicesOverlay.apk</code></li><li>在 <code>com.miui.systemui.devices.overlay</code> → <code>resources.arsc</code> → <code>dimen</code> → <code>dimen-port</code> 中，找到 <code>status_bar_padding_top</code>。</li><li>將此數值<strong>減小</strong>，減去的量與你在上一步調大的 <code>status_bar_height_default</code> 數值相同，以抵銷其影響。</li></ul></li></ol>`,63)]))}const g=o(l,[["render",d]]);export{h as __pageData,g as default};
