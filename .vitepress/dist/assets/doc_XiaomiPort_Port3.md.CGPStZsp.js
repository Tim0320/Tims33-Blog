import{_ as e,c as a,o as i,aj as t}from"./chunks/framework.B0lLLFDn.js";const k=JSON.parse('{"title":"MIUI/HyperOS 移植指南：常見問題與修復","description":"","frontmatter":{},"headers":[],"relativePath":"doc/XiaomiPort/Port3.md","filePath":"doc/XiaomiPort/Port3.md","lastUpdated":null}'),o={name:"doc/XiaomiPort/Port3.md"};function l(r,s,n,d,p,c){return i(),a("div",null,s[0]||(s[0]=[t(`<h1 id="miui-hyperos-移植指南-常見問題與修復" tabindex="-1">MIUI/HyperOS 移植指南：常見問題與修復 <a class="header-anchor" href="#miui-hyperos-移植指南-常見問題與修復" aria-label="Permalink to &quot;MIUI/HyperOS 移植指南：常見問題與修復&quot;">​</a></h1><p>這份指南整理了在進行 MIUI 或 HyperOS 韌體移植時，可能遇到的問題及其解決方案。</p><blockquote><p>此修復方案教學由 酷安眾多大佬提供，由 閃電Flashh 彙整，真摯感謝。</p></blockquote><h2 id="_1-修復「全部參數與資訊」中的處理器頻率錯誤" tabindex="-1">1. 修復「全部參數與資訊」中的處理器頻率錯誤 <a class="header-anchor" href="#_1-修復「全部參數與資訊」中的處理器頻率錯誤" aria-label="Permalink to &quot;1\\. 修復「全部參數與資訊」中的處理器頻率錯誤&quot;">​</a></h2><p>此問題常見於 <strong>MIUI A12 或更舊的底包</strong>。 打開 <strong><code>/product/etc/device_features/你的機型代號.xml</code></strong>，搜尋 <code>cpu_max_freq</code>，然後將其參數值修改為正確的處理器頻率。</p><blockquote><p><strong>例如</strong>:</p><ul><li><code>291</code> 代表 2.91GHz</li><li><code>320</code> 代表 3.2GHz</li></ul></blockquote><hr><h2 id="_2-修復設定中的認證資訊" tabindex="-1">2. 修復設定中的認證資訊 <a class="header-anchor" href="#_2-修復設定中的認證資訊" aria-label="Permalink to &quot;2\\. 修復設定中的認證資訊&quot;">​</a></h2><p>用底包中的 <strong><code>/product/overlay/SettingsRroDeviceTypeOverlay.apk</code></strong> 替換。若底包過舊找不到，可自行修改其他機型的 APK，替換其中的認證圖片並修改為正確的認證型號。</p><blockquote><p><em>此修復方案部分來自是天天吖。</em></p></blockquote><hr><h2 id="_3-移除無法使用的呼吸燈開關" tabindex="-1">3. 移除無法使用的呼吸燈開關 <a class="header-anchor" href="#_3-移除無法使用的呼吸燈開關" aria-label="Permalink to &quot;3\\. 移除無法使用的呼吸燈開關&quot;">​</a></h2><p>打開 <strong><code>/product/etc/device_features/你的機型代號.xml</code></strong>，搜尋 <code>support_led_light</code> 和 <code>support_led_color</code>。若它們的值為 <code>true</code>，請將其修改為 <strong><code>false</code></strong>。</p><hr><h2 id="_4-遮蔽陽光模式開關" tabindex="-1">4. 遮蔽陽光模式開關 <a class="header-anchor" href="#_4-遮蔽陽光模式開關" aria-label="Permalink to &quot;4\\. 遮蔽陽光模式開關&quot;">​</a></h2><p>在 <strong><code>/product/etc/device_features/你的機型代號.xml</code></strong> 中新增以下程式碼即可遮蔽開關：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;config_sunlight_mode_available&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;false&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><hr><h2 id="_5-修復預設壁紙-方案-1" tabindex="-1">5. 修復預設壁紙（方案 1） <a class="header-anchor" href="#_5-修復預設壁紙-方案-1" aria-label="Permalink to &quot;5\\. 修復預設壁紙（方案 1）&quot;">​</a></h2><ol><li>拆包 <strong><code>/product/overlay/AospFrameworkResOverlay.apk</code></strong>。</li><li>在 <code>res</code> → <code>drawable</code> 資料夾中，將所有壁紙替換為你想要的預設壁紙。</li></ol><hr><h2 id="_6-修復預設壁紙-方案-2" tabindex="-1">6. 修復預設壁紙（方案 2） <a class="header-anchor" href="#_6-修復預設壁紙-方案-2" aria-label="Permalink to &quot;6\\. 修復預設壁紙（方案 2）&quot;">​</a></h2><p>此方案可恢復澎湃系統的預設壁紙。</p><ol><li>拆包 <strong><code>/product/overlay/AospFrameworkResOverlay.apk</code></strong>。</li><li>在 <code>resources.arsc</code> 中，刪除 <code>android.aosp.overlay</code> → <code>drawable</code> 裡的所有內容。</li></ol><hr><h2 id="_7-修復小米相簿編輯功能" tabindex="-1">7. 修復小米相簿編輯功能 <a class="header-anchor" href="#_7-修復小米相簿編輯功能" aria-label="Permalink to &quot;7\\. 修復小米相簿編輯功能&quot;">​</a></h2><p>用底包中的 <strong><code>/product/data-app/MIMediaEditor</code></strong> 替換。</p><blockquote><p><strong>注意</strong>: 在 <strong>MIUI A12 或更舊的底包</strong>中，該路徑可能為 <code>/system/data-app/MIMediaEditor</code>。</p></blockquote><hr><h2 id="_8-修復-heic-圖片檢視問題" tabindex="-1">8. 修復 HEIC 圖片檢視問題 <a class="header-anchor" href="#_8-修復-heic-圖片檢視問題" aria-label="Permalink to &quot;8\\. 修復 HEIC 圖片檢視問題&quot;">​</a></h2><p>在 <code>build.prop</code> 中加入以下程式碼。若不確定，可新增至 <strong><code>/product/etc/build.prop</code></strong>。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vendor.mm.enable.qcom_parser=</span></span></code></pre></div><p>等號後的數值會因機型而異：</p><ul><li><strong>870/888</strong> 機型: <code>12565751</code></li><li><strong>778+</strong> 機型: <code>16776951</code></li></ul><hr><h2 id="_9-老機型修復側滑返回震動-方案-1" tabindex="-1">9. 老機型修復側滑返回震動（方案 1） <a class="header-anchor" href="#_9-老機型修復側滑返回震動-方案-1" aria-label="Permalink to &quot;9\\. 老機型修復側滑返回震動（方案 1）&quot;">​</a></h2><p>此方案適用於更換第三方內核後，其他震動正常但側滑返回震動失效的舊款機型。</p><ol><li>進入 <strong><code>/vendor/firmware/</code></strong> 路徑。</li><li>刪除 <code>162_Gesture</code> 和 <code>163_Gesture</code> 開頭的兩個檔案。</li></ol><blockquote><p><strong>效果</strong>: 刪除後，側滑返回的第一段無震動，第二段有震動。</p></blockquote><hr><h2 id="_10-老機型修復側滑返回震動-方案-2" tabindex="-1">10. 老機型修復側滑返回震動（方案 2） <a class="header-anchor" href="#_10-老機型修復側滑返回震動-方案-2" aria-label="Permalink to &quot;10\\. 老機型修復側滑返回震動（方案 2）&quot;">​</a></h2><p>此方案適用於上述同樣問題，但效果不同。 在任意分區的 <code>build.prop</code> 中新增： <code>sys.haptic.version=2.0</code></p><blockquote><p><strong>效果</strong>: 呼叫 2.0 震動後，側滑返回的第一段有震動，第二段無震動。但其他震動功能可能會失效大半。</p></blockquote><hr><h2 id="_11-修復精彩錄製-高能時刻-錄製後不儲存" tabindex="-1">11. 修復精彩錄製（高能時刻）錄製後不儲存 <a class="header-anchor" href="#_11-修復精彩錄製-高能時刻-錄製後不儲存" aria-label="Permalink to &quot;11\\. 修復精彩錄製（高能時刻）錄製後不儲存&quot;">​</a></h2><ol><li>找到 <strong><code>/product/app/</code></strong> 路徑下，檔名含有 <code>MiGameService</code> 的資料夾。</li><li>用本機或同定位機型中的檔案替換。已知 870、778、888 為一套，7+ Gen 2 為一套，8+ Gen 1 為一套。</li><li>如果你的設備原本沒有此功能，可手動開啟： <ul><li>打開 <strong><code>/product/etc/device_features/你的機型代號.xml</code></strong>。</li><li>新增（或將現有選項從 <code>false</code> 改為 <code>true</code>）以下程式碼：</li></ul><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;support_game_mi_time&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;true&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li>如果仍無效，檢查 <code>/product/app/</code> 是否有 <code>MiGameService</code> 資料夾。若無，可嘗試從同定位機型中提取並補入。</li></ul></li></ol><hr><h2 id="_12-cust-分區精簡" tabindex="-1">12. <code>cust</code> 分區精簡 <a class="header-anchor" href="#_12-cust-分區精簡" aria-label="Permalink to &quot;12\\. \`cust\` 分區精簡&quot;">​</a></h2><p>解包 <code>cust.img</code> 後，只保留以下檔案和資料夾：</p><ul><li><code>/cust/cust_variant</code></li><li><code>/cust/etc/business.prop</code></li><li><code>/cust/etc/cust_apps_config</code></li><li><code>/cust/etc/cust_apps_request_config</code> 其餘一律刪除後重新打包。</li></ul><hr><h2 id="_13-userdata-分區處理" tabindex="-1">13. <code>userdata</code> 分區處理 <a class="header-anchor" href="#_13-userdata-分區處理" aria-label="Permalink to &quot;13\\. \`userdata\` 分區處理&quot;">​</a></h2><p>在 MiFlash 線刷包中，通常會包含一個 <code>userdata.img</code>。更換一個乾淨、未被修改過的 <code>userdata.img</code> 即可（通常可根據較小的檔案大小判斷）。</p><hr><h2 id="_14-常規應用精簡" tabindex="-1">14. 常規應用精簡 <a class="header-anchor" href="#_14-常規應用精簡" aria-label="Permalink to &quot;14\\. 常規應用精簡&quot;">​</a></h2><p>這些應用通常可以安全刪除，以節省空間和提高效能。</p><ul><li><strong>使用者反饋</strong>: <code>/product/app/MiBugReport</code></li><li><strong>智慧服務</strong>: <code>/product/app/MSA</code></li><li><strong>系統更新</strong>: <code>/product/app/Updater</code></li><li><strong>服務與反饋</strong>: <code>/product/priv-app/MIService</code></li><li><strong>小米運動健康</strong>: <code>/product/data-app/Health</code></li><li><strong>小米相簿-編輯</strong>: <code>/product/data-app/MIMediaEditor</code></li><li><strong>小米錢包</strong>: <code>/product/data-app/MIpay</code></li><li><strong>小米商城</strong>: <code>/product/data-app/MiShop</code></li><li><strong>萬能遙控</strong>: <code>/product/data-app/XMRemoteController</code> ...等等。</li></ul><hr><h2 id="_15-移植時的額外精簡" tabindex="-1">15. 移植時的額外精簡 <a class="header-anchor" href="#_15-移植時的額外精簡" aria-label="Permalink to &quot;15\\. 移植時的額外精簡&quot;">​</a></h2><p>老設備移植 <strong>8 Gen 2 及以上</strong>的 ROM 時，由於以下檔案會被本機的 <code>/vendor/app/</code> 覆蓋，因此可以安全精簡掉：</p><ul><li><code>/product/app/IFAAService</code></li><li><code>/product/app/MipayService</code></li><li><code>/product/app/QcomSoterService</code></li></ul><hr><h2 id="_16-解耦合應用" tabindex="-1">16. 解耦合應用 <a class="header-anchor" href="#_16-解耦合應用" aria-label="Permalink to &quot;16\\. 解耦合應用&quot;">​</a></h2><p>將以下應用從 <code>priv-app</code> 或 <code>app</code> 移動到 <code>data-app</code>，可將其轉為可卸載的系統應用，從而釋放系統空間。</p><ul><li><strong>快應用服務框架</strong>: <code>/product/app/HybridPlatform</code></li><li><strong>瀏覽器</strong>: <code>/product/priv-app/MIUIBrowser</code></li></ul><blockquote><p><strong>提示</strong>: 在第二批解耦合的機型中，可解耦合的應用範圍更大，例如音樂、錢包等。</p></blockquote><hr><h2 id="_17-移除簽名驗證" tabindex="-1">17. 移除簽名驗證 <a class="header-anchor" href="#_17-移除簽名驗證" aria-label="Permalink to &quot;17\\. 移除簽名驗證&quot;">​</a></h2><p>此操作可允許安裝未經簽名或修改的 APK。</p><ol><li>反編譯 <strong><code>/system/framework/services.jar</code></strong>。</li><li>用 MT 管理器中的 <strong>Dex 編輯器++</strong>，全選後進入。</li><li>搜尋 <code>getMinimumSignatureSchemeVersionForTargetSdk</code>。</li><li>將類似於以下兩行的程式碼：<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>invoke-static {v0}, Landroid/util/apk/ApkSignatureVerifier;-&gt;getMinimumSignatureSchemeVersionForTargetSdk(I)I</span></span>
<span class="line"><span>move-result v0</span></span></code></pre></div>替換為： <code>const/4 v0, 0x0</code></li></ol><blockquote><p><strong>注意</strong>: 通常會搜尋到 4 處，每處都需要修改。 <em>此方法來自白羊唐黎明。</em></p></blockquote><hr><h2 id="_18-dex2oat" tabindex="-1">18. Dex2Oat <a class="header-anchor" href="#_18-dex2oat" aria-label="Permalink to &quot;18\\. Dex2Oat&quot;">​</a></h2><p>此步驟用於重新編譯修改過的 <code>services.jar</code>，以確保其正常運作。</p><ol><li>在手機內部儲存中建立工作目錄，例如 <code>/storage/emulated/0/工作目錄/service/</code>。</li><li>將修改好的 <strong><code>services.jar</code></strong> 和 <strong><code>services.jar.prof</code></strong> 複製到該目錄。</li><li>在終端執行以下命令（指令較長，建議分段執行或確認路徑無誤）： <ul><li>清除舊的編譯檔案：</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/工作目錄/service/services.art</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/工作目錄/service/services.odex</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/工作目錄/service/services.vdex</span></span></code></pre></div><ul><li>進入目錄並執行 Dex2Oat 編譯：</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/工作目錄/service/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dex2oat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dex-file=services.jar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --instruction-set=arm64</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --compiler-filter=everything</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --profile-file=services.jar.prof</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --oat-file=services.odex</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --app-image-file=services.art</span></span></code></pre></div><ul><li>將新生成的檔案複製到指定位置：</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 建立儲存目錄</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/儲存目錄/framework/oat/arm64/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 複製編譯結果</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/工作目錄/service/services.art</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/儲存目錄/framework/oat/arm64/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/工作目錄/service/services.odex</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/儲存目錄/framework/oat/arm64/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/工作目錄/service/services.vdex</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/儲存目錄/framework/oat/arm64/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 複製 jar 和 prof 檔案</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/工作目錄/service/services.jar.prof</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/儲存目錄/framework/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/工作目錄/service/services.jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /storage/emulated/0/儲存目錄/framework/</span></span></code></pre></div></li><li>最後，將 <code>/storage/emulated/0/儲存目錄/framework/</code> 中的內容複製並覆蓋到 <strong><code>/system/framework/</code></strong>。</li></ol><blockquote><p><em>此方法來自白羊唐黎明。</em></p></blockquote><hr><h2 id="_19-修復刷模組後-nfc-失效" tabindex="-1">19. 修復刷模組後 NFC 失效 <a class="header-anchor" href="#_19-修復刷模組後-nfc-失效" aria-label="Permalink to &quot;19\\. 修復刷模組後 NFC 失效&quot;">​</a></h2><p>將 <strong><code>/product/pangu/system/</code></strong> 中的內容合併到 <strong><code>/system/</code></strong> 分區即可。</p><hr><h2 id="_20-新全域高刷" tabindex="-1">20. 新全域高刷 <a class="header-anchor" href="#_20-新全域高刷" aria-label="Permalink to &quot;20\\. 新全域高刷&quot;">​</a></h2><p>此方案用於為設備新增或開啟新的全域高刷新率模式。</p><ol><li>打開 <strong><code>/product/etc/device_features/你的機型代號.xml</code></strong>。</li><li>如果沒有新版的刷新率介面，新增以下程式碼：<div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;support_smart_fps&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;true&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">integer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;smart_fps_value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;120&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li><li>找到 <code>fpsList</code> 並在其中找到 <code>&lt;item&gt;60&lt;/item&gt;</code>，將其修改為： <code>&lt;item&gt;6&lt;/item&gt;</code></li><li>進入系統後，在刷新率設定中多次從 120Hz 切換到 6Hz，即可啟用此功能。</li></ol><hr><h2 id="_21-狂暴引擎-ui" tabindex="-1">21. 狂暴引擎 UI <a class="header-anchor" href="#_21-狂暴引擎-ui" aria-label="Permalink to &quot;21\\. 狂暴引擎 UI&quot;">​</a></h2><ul><li><strong>遊戲加速</strong>: 在 <strong><code>/product/etc/device_features/你的機型代號.xml</code></strong> 中新增： <code>&lt;bool name=&quot;support_wild_boost&quot;&gt;true&lt;/bool&gt;</code> 需要 <strong>8.8 或以上</strong>版本的手機管家（安全服務）。</li><li><strong>控制中心與省電模式</strong>: 在 <strong><code>/product/etc/device_features/你的機型代號.xml</code></strong> 中新增： <code>&lt;bool name=&quot;support_wild_boost_bat_perf&quot;&gt;true&lt;/bool&gt;</code> 需要 <strong>9.0 或以上</strong>版本的手機管家（安全服務）。</li></ul>`,86)]))}const g=e(o,[["render",l]]);export{k as __pageData,g as default};
